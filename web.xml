<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">
	<description>站点描述</description>
	<display-name>站点名</display-name>
	<!--small-icon元素应指向web站台中某个小图标的路径,大小为16 X 16 pixel,但是图象文件必须为GIF或JPEG格式,扩展名必须为:.gif或.jpg.-->
	<!--large-icon元素应指向web站台中某个大图表路径,大小为32 X 32 pixel,但是图象文件必须为GIF或JPEG的格式,扩展名必须为; gif或.jpg.-->
	<icon>
		<small-icon>/image/small.jpg</small-icon>
		<large-icon>/image/large.jpg</large-icon>
	</icon>
	<!--distributable 元素为空标签,它的存在与否可以指定站台是否可分布式处理.如果web.xml中出现这个元素,则代表站台在开发时已经
		被设计为能在多个JSP Container 之间分散执行.-->
	<distributable/>
	<!--context-param 元素用来设定web站台的环境参数(context),它包含两个子元素:param-name和param-value.-->
	<!--此所设定的参数,在JSP网页中可以使用下列方法来取得:${initParam.param_name}-->
	<!--若在Servlet可以使用下列方法来获得:String param_name=getServletContext().getInitParamter("param_name");-->
	<context-param>
		<param-name>param-name</param-name>
		<param-value>param-value</param-value>
	</context-param>
	<!--filter元素用来声明filter的相关设定.filter元素除了下面介绍的的子元素之外,还包括<servlet>介绍过的<icon>,<display-name>
		,<description>,<init-param>,其用途一样.-->
	<filter>
		<filter-name>filterName</filter-name>
		<filter-class>com.org.XXX</filter-class>
		<init-param>
			<param-name></param-name>
			<param-value></param-value>
		</init-param>
	</filter>
	<!--filter-mapping 元素的两个主要子元素filter-name和url-pattern.用来定义Filter所对应的URL.-->
	<filter-mapping>
		<filter-name>filterName</filter-name>
		<utl-pattern>/</utl-pattern>
		<servlet-name>Servlet的名称<servlet-name>
		<dispatcher>REQUEST|INCLUDE|FORWARD|ERROR</disaptcher>
	</filter-mapping>
	<!--listener元素用来定义Listener接口,它的主要子元素为<listener-class>-->
	<listener>
		<listener-class>coreservlet.javaworld.CH11.ContenxtListener</listener-class>
	</listener>
	<!--session-config包含一个子元素session-timeout.定义web站台中的session参数-->
	<session-config>
	   <session-timeout>20</session-timeout>
	</session-config>
	<!--welcome-file用来指定首页文件名称.我们可以用<welcome-file>指定几个首页,而服务器会依照设定的顺序来找首页.-->
	<welcome-file-list>
		<welcome-file></welcome-file>
		<welcome-file></welcome-file>
	</welcome-file-list>
	<!--error-page元素包含三个子元素error-code,exception-type和location.将错误代码(Error Code)或异常(Exception)的种类对应到web站台资源路径.-->
	<error-page>
		<error-code>404</error-code>
		<location>/error404.jsp</location>
	</error-page>
	<error-page>
		<error-type>java.lang.Exception</error-code>
		<location>/exception</location>
	</error-page>
	
	
	
	
	<mima-mapping></mima-mapping>
	<jsp-config></jsp-config>
	<resource-ref>
	   <description>JNDI JDBC DataSource of JSPBook</description>
	   <res-ref-name>jdbc/sample_db</res-ref-name>
	   <res-type>javax.sql.DataSoruce</res-type>
	   <res-auth>Container</res-auth>
	</resource-ref>
<web-app>